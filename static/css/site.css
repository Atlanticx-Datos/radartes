/* static/css/site.css */
/* ====================================
   CUSTOM SCROLLBARS
   Used in: database.html, _search_results.html
   Purpose: Hide scrollbars while maintaining scroll functionality
   Why custom: Requires vendor prefixes and !important overrides
==================================== */
.custom-scrollbar {
    scrollbar-width: none;
}

.custom-scrollbar::-webkit-scrollbar {
    width: 0;
    height: 0;
}

/* ====================================
   CUSTOM NAV DROPDOWNS
   Used in: home.html, layout.html, database.html, 
   Purpose: Custom dropdowns for navigation and table share
   Why custom: Different styling needed for nav vs table dropdowns
==================================== */

/* General dropdown positioning - least specific */
.dropdown-content {
    right: 0;
    transform-origin: top right;
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    border: 1px solid black;
    margin-top: 0.75rem;
}

/* Navigation dropdowns - more specific */
nav .dropdown-content,
.nav-dropdown {
    position: fixed;
    z-index: 999999;
    background-color: rgb(244, 244, 245) !important;
}

/* Table share dropdowns - more specific */
.table-fixed .dropdown-content {
    position: absolute;
    z-index: 50;
    background-color: rgb(244, 244, 245) !important;
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
}

/* ====================================
     TABLE ANIMATIONS
     Used in: database.html
     Purpose: Highlight newly added or updated rows
     Why custom: Complex keyframe animations not possible with Tailwind
  ==================================== */
@keyframes flashHighlight {
    0% {
        border-left-width: 0;
    }

    50% {
        border-left-width: 12px;
    }

    100% {
        border-left-width: 0;
    }
}

.flash-highlight {
    animation: flashHighlight 1s ease-out;
}

/* ====================================
     MODAL STYLES
     Used in: database.html, _search_results.html
     Purpose: Handle modal scrolling and animations
     Why custom: Scrollbar styling and custom animations
  ==================================== */
.modal-content {
    scrollbar-width: none;
    -ms-overflow-style: none;
}

.modal-animate {
    animation: modalEntry 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* ====================================
     MOBILE RESPONSIVE OVERRIDES FOR TABLES
     Used in: database.html
     Purpose: Handle table overflow on mobile devices
     Why custom: Requires !important to override table defaults
  ==================================== */
@media (max-width: 1024px) {
    .mobile-table-overflow {
        overflow-x: auto !important;
    }

    .mobile-table-width {
        width: 150% !important;
        table-layout: fixed !important;
    }
}

/* ====================================
     MULTI-LINE TEXT TRUNCATION
     Used in: _search_results.html, _my_results.html
     Purpose: Truncate text after 2 lines with ellipsis
     Why custom: Not possible with standard Tailwind truncate
  ==================================== */
.truncate-multiline {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

/* ====================================
     ROW HIGHLIGHT ANIMATION
     Used in: _search_results.html
     Purpose: Fade out highlight effect for row updates
     Why custom: Requires RGBA color transition
  ==================================== */
@keyframes rowHighlight {
    from {
        background-color: rgba(254, 240, 138, 0.5);
    }

    to {
        background-color: transparent;
    }
}

.highlight-row {
    animation: rowHighlight 1.5s ease-out;
}


/* ====================================
     MOBILE TOUCH OPTIMIZATIONS
     Used in: All interactive elements on mobile
     Purpose: Improve touch target behavior
     Why custom: Requires vendor-specific properties
  ==================================== */
@media (max-width: 640px) {
    .touch-optimized {
        -webkit-tap-highlight-color: transparent;
        touch-action: manipulation;
    }
}

/* ====================================
     MOBILE ACTION OVERFLOW
     Used in: _my_results.html
     Purpose: Handle action button overflow on mobile
     Why custom: Specific positioning requirements
  ==================================== */
@media (max-width: 768px) {
    .mobile-action-overflow {
        margin-left: -1rem;  /* -ml-4 in Tailwind equals -1rem */
        overflow-x: visible;
    }
}

/* ====================================
   AUTOCOMPLETE STYLES
   Used in: All search inputs
   Purpose: Style the autocomplete dropdown
   Why custom: Requires specific positioning and transitions
==================================== */
#autocomplete-list {
    position: absolute;
    z-index: 1000;
    width: 100%;
    max-height: 200px;
    overflow-y: auto;
    background-color: white;
    border: 1px solid #e5e7eb;
    border-radius: 0.375rem;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    margin-top: 0.25rem;
    display: none; /* Hidden by default */
}

#autocomplete-list.active {
    display: block;
}

.suggestion-item {
    padding: 0.5rem 1rem;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.suggestion-item:hover {
    background-color: #f3f4f6;
}

.suggestion-item span.font-semibold {
    color: #0891b2; /* cyan-600 */
}

/* ====================================
   DROPDOWN ON MODAL
   Used in: index.html
   Purpose: Style the dropdown on modal
   Why custom: maybe because it is delivered from js
==================================== */
.share-dropdown {
    z-index: 10000; /* Higher than modal's z-index */
}
.share-option {
    transition: background-color 0.2s ease;
    color: #374151;
    font-size: 0.875rem;
}
.share-toggle-btn {
    position: absolute;
    top: 1rem;
    right: 1rem;
}

html {
    /* Always show the vertical scrollbar, even if it's disabled */
    overflow-y: scroll;
}

/* ====================================
   FILTER BUTTON COMPONENTS
   Used in: index.html filter buttons
   Purpose: Custom interactive filter UI
   Why custom: Complex state management and animations
==================================== */
.filter-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    width: 100%;
}

.filter-btn {
    transition: all 0.3s ease;
    position: relative;
    background-color: white;
    border: 1px solid #e5e7eb;
    width: 100%;
    min-height: 120px;
}

.filter-btn svg {
    transition: stroke 0.3s ease;
    stroke: #4b5563;
}

.filter-btn:hover {
    border-color: #3b82f6;
    background-color: #eff6ff;
}

.filter-btn:hover svg {
    stroke: #3b82f6;
}

.filter-btn[data-active="true"] {
    background-color: #2563eb;
    border-color: #2563eb;
    color: white;
    transform: scale(1.02);
}

.filter-btn[data-active="true"] svg {
    stroke: white;
}

.filter-btn:active {
    transform: scale(0.98);
}

.filter-btn::after {
    content: '';
    position: absolute;
    inset: -2px;
    border-radius: inherit;
    border: 2px solid transparent;
    transition: border-color 0.3s ease;
}

.filter-btn[data-active="true"]::after {
    border-color: #3b82f6;
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

/* Contextual styles */
.filter-container:has(.filter-btn[data-active="true"]) .filter-btn:not([data-active="true"]) {
    opacity: 0.5;
}

@media (hover: hover) {
    .filter-container:has(.filter-btn[data-active="true"]) .filter-btn:not([data-active="true"]):hover {
        opacity: 0.8;
    }
}

/* Responsive grid adjustments */
@media (min-width: 640px) {
    .filter-container {
        grid-template-columns: repeat(3, 1fr);
    }
}

@media (min-width: 1024px) {
    .filter-container {
        grid-template-columns: repeat(4, 1fr);
    }
}

/* Add table-specific styles */
.results-table {
    @apply min-w-full divide-y divide-gray-200;
}

.results-table thead {
    @apply bg-gray-50;
}

.results-table th {
    @apply px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider;
    min-width: 120px;  /* Prevent column collapse */
}

.results-table td {
    @apply px-4 py-3 text-sm text-gray-900;
    min-width: 120px;  /* Prevent column collapse */
}

.results-table td:first-child {
    min-width: 200px;  /* Wider first column */
}

.results-table tr {
    @apply transition-colors hover:bg-gray-50;
}

/* Mobile optimization */
@media (max-width: 640px) {
    .results-table-container {
        @apply overflow-x-auto;
    }
    
    .results-table {
        @apply text-sm;
    }
    
    .results-table th,
    .results-table td {
        @apply px-2 py-2;
        min-width: 100px;
    }
    
    .results-table td:first-child {
        min-width: 150px;
    }
}

/* ====================================
   PAGINATION STYLES
   Used in: All paginated results
   Purpose: Style pagination controls
   Why custom: Complex responsive behavior
==================================== */
.pagination-container {
    @apply mt-4 flex items-center justify-between;
}

.pagination-nav {
    @apply relative z-10 inline-flex rounded-md shadow-sm -space-x-px;
}

.pagination-button {
    @apply relative inline-flex items-center px-3 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors;
}

.pagination-button.active {
    @apply bg-blue-50 text-blue-600 border-blue-500;
}

.pagination-button.disabled {
    @apply opacity-50 cursor-not-allowed;
}

@media (max-width: 640px) {
    .pagination-info {
        @apply hidden;
    }
    
    .pagination-nav {
        @apply flex-wrap justify-center gap-1;
    }
    
    .pagination-button {
        @apply px-2 py-1 text-xs;
    }
}

.pagination-number {
    transition: all 0.2s ease-in-out;
}

.pagination-number:hover {
    transform: scale(1.1);
}

.pagination-number.active {
    background-color: #2563eb;
    color: white;
}

@media (max-width: 640px) {
    .pagination-number {
        width: 2rem;
        height: 2rem;
        font-size: 0.875rem;
    }
}


